#summary Predication Based Semantic Indexing - PSI

== Introduction ==

Predication-based Semantic Indexing, or PSI, is an application of distributional semantic techniques to reasoning and inference. This is exciting because traditionally the areas of empirical learning and deductive inference have been treated quite separately in linguistics and artificial intelligence, but in the last few years we have seen techniques from both areas working together. PSI is one such technique.

PSI starts with a collection of known facts or observations, and combines them into a single semantic vector model in which concepts and relationships are both represented. Then the usual tools for constructing query vectors and searching for results in SemanticVectors can be used to suggest new facts that have not been observed or recorded before. In some ways this is like using SemanticVectors as a kind of automated theorem prover: but it is much faster and noise-tolerant than traditional symbolic theorem provers. (Of course, one could reverse "noise-tolerant" and say that symbolic theorem provers are more "exact" than PSI: so PSI complements, it does not replace, traditional theorem proving.)

== Semantic Vectors from Subject-Predicate-Object Triples ==

Start by taking a look in the small file of test data, [https://code.google.com/p/semanticvectors/source/browse/trunk/test/testdata/nationalfacts/nationalfacts.txt nationalfacts.txt]. This file contains a collection of facts about different countries, such as:

{{{
Sukhumi	CAPITAL_OF	 Abkhazia
...
Afghanistan	HAS_CURRENCY	Afghan afghani
...
Armenia	HAS_NATIONAL_ANIMAL	Eagle
...
etc.
}}}

This is an example of a "triple store", a way of representing individual facts that has become increasingly prominent in recent years. Each fact contains a pair of items (such as "Sukhumi" and "Abkhazia"), and a relationship that holds between them, such as "CAPITAL_OF". The first item is sometimes called the subject, the last item is sometimes called the object, and the relation that holds between them is sometimes called the predicate. And the whole triple may be referred to as a "predication", hence "Predication Semantic Indexing".

== Distribution ==

PSI is integrated and available in SemanticVectors as of version 3.4, and works with real, binary, and complex vectors.

To get an example working, get the [https://code.google.com/p/semanticvectors/source/browse/trunk/test/testdata/nationalfacts/nationalfacts.txt nationalfacts.txt] file from the test directory, and run

{{{
$ java pitt.search.lucene.LuceneIndexFromTriples nationalfacts.txt
$ java pitt.search.semanticvectors.PSI predication_index/
$ java pitt.search.semanticvectors.Search -searchtype boundproduct -queryvectorfile semanticvectors.bin -boundvectorfile predicatevectors.bin -searchvectorfile elementalvectors.bin -matchcase mexico HAS_CURRENCY
Opening query vector store from file: semanticvectors.bin
Opening second query vector store from file: predicatevectors.bin
Opening search vector store from file: elementalvectors.bin
Searching term vectors, searchtype boundproduct
Found vector for 'mexico'
Found vector for 'HAS_CURRENCY'
Search output follows ...
0.6981237432989211:mexican_peso
0.6940203823601886:euro
0.6930460858871165:armenian_dram
0.6923611416306082:netherlands_antillean_guilder
0.6912367947828915:east_caribbean_dollar
0.6912367627886535:central_african_cfa_franc
...
}}}

The "Search" command also implements a simple "formal query parse" using the `E(foo) * S(bar)` kind of notation for elemental and semantic vectors, developed in the papers cited below. For example, once you have the above example working on the test data, the "dollar of mexico" analogy can be recovered using the following query expression (all on one line):

{{{
java pitt.search.semanticvectors.Search -searchtype boundproduct -queryvectorfile semanticvectors.bin -boundvectorfile elementalvectors.bin -searchvectorfile elementalvectors.bin -matchcase "E(united_states_dollar)*S(united_states)*S(mexico)"
}}}

== References / Further Reading ==

[http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2815384/pdf/amia-f2009-114.pdf Predication-based Semantic Indexing: Permutations as a Means to Encode Predications in Semantic Space.] Cohen T, Schvaneveldt, R. Rindlesch, T. AMIA Annu Symp Proc. 2009. 114-118.

[http://www.aaai.org/ocs/index.php/FSS/FSS10/paper/view/2272/2682 Logical Leaps and Quantum Connectives: Forging Paths through Predication Space.] Cohen, T. Widdows, D. Schvaneveldt, R. Rindflesch, T. AAAI Fall 2010 symposium on Quantum Informatics for cognitive, social and semantic processes (QI-2010).

[http://www.puttypeg.net/papers/schizophrenias-prozac.pdf Finding Schizophrenia's Prozac: Emergent Relational Similarity in Predication Space.] Cohen, T. Widdows, D. Schvaneveldt, RW. Rindflesch, T. Proceedings of the Fifth International Symposium on Quantum Interaction, Aberdeen, UK, 2011.