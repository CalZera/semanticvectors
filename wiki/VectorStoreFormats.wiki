#summary Vector Store Formats supported by SemanticVectors package.

== Vector Store Formats ==

As of version 1.6, the SemanticVectors package has the option of storing vectors on disk in two different formats.

=== Optimized Lucene Format ===

Created by the [http://semanticvectors.googlecode.com/svn/trunk/doc/pitt/search/semanticvectors/VectorStoreWriter.html VectorStoreWriter] class, this is the default used by the SemanticVectors package. Lucene's I/O routines are very fast, and the indexes are quite small (e.g., the termvectors.bin index for the King James Bible corpus is ~2.8M).

The format is read by the http://semanticvectors.googlecode.com/svn/trunk/doc/pitt/search/semanticvectors/VectorStoreReader.html VectorStoreReader] class

=== Plain Text Format ===

Also created by the [http://semanticvectors.googlecode.com/svn/trunk/doc/pitt/search/semanticvectors/VectorStoreWriterText.html VectorStoreWriter] class, this was implemented mainly to enable vector stores to be input from and output to a plain text format for exchanging data with other environments (e.g., sending SemanticVectors data out for analysis in Matlab).

Each vector is output on a single line, of the form
`string_object_name|num_1|num_2|...|num_n`
where `n` is the number of dimensions stored in `ObjectVector.vecLength`.

The plain text indexes are bigger (e.g., the index for the bible termvectors is ~6.7M) and noticeably slower for searching. Nonetheless, they are read using the [http://semanticvectors.googlecode.com/svn/trunk/doc/pitt/search/semanticvectors/VectorStoreReaderText.html VectorStoreReaderText] class which implements the [http://semanticvectors.googlecode.com/svn/trunk/doc/pitt/search/semanticvectors/VectorStore.html VectorStore] interface, so they can be used just like the optimized Lucene indexes.
However, if you care about space and time, you'll probably want to translate such indexes using the translation tool described below.

=== Header Information ===

Both formats support a header line (in the appropriate format) that expresses the number of dimensions used by the vectors in the store, e.g., the plain text format contains a header row saying
`-dimensions|n`
(the flag `-` is used in front of the word `dimensions` as an escape character).

When reading a vector store, SemanticVectors will look for such a header, but if it doesn't find one (e.g., if the indexes were built with older versions of the software) it will try to infer the correct number of dimensions by parsing the first line in the file, assuming that it is a normal vector line.

=== Translating Between Formats ===

SemanticVectors version 1.6 shipped with a [http://semanticvectors.googlecode.com/svn/trunk/doc/pitt/search/semanticvectors/VectorStoreTranslater.html VectorStoreTranslater] which enables users to translate between the two formats above.
This is invoked with the command
`java pitt.search.semanticvectors.VectorStoreTranslater -OPTION infile outfile`
where -OPTION is currently one of `-lucenetotext` and `texttolucene`.