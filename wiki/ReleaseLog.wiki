#summary Release Log
#labels Phase-Implementation

=== Release 1.6 ===

2008-03-18

   # Bilingual models implemented - see BilingualModels.
   # Plain text interchange format and tools implemented - see VectorStoreFormats.
   # `build.xml` changed so that the source distributions ship with just `src/` directory and build file: the rest is automatically generated and there seems to be no good reason for taking any more bandwidth.
   # Beginnings of a testing suite have been created. Tests don't ship with the main package, and should be checked out by developers from svn.

=== Release 1.4 ===

2008-02-08

Two main improvements.

   # Setting of dimensions, seedlength and minimum term frequency all done using command line arguments (see `BuildIndex`). Number of dimensions is now stored in a small header for vector files created by `VectorStoreWriter`, and this is read by `VectorStoreReader`. If absent, `VectorStoreReader` tries the default value (200) or failing that, dies and tells you to rebuild indexes. So there is some backwards compatibility with indexes made with older versions of the software, but some indexes will need to be rebuilt. Thanks to Trevor Cohen for most of these improvements.

   # Query building code is now equipped with negation, supporting the same functionality as Infomap-NLP. `CompoundQueryBuilder` parses queries and sees if they have a "NOT" term in them, `VectorUtils` has the function for orthogonalizing these query sets.

=== Release 1.2 ===

2008-01-30

The main improvement is the redesign of `TermVectorsFromLucene` to use a sparse representation for the basic document vectors (`basicDocVectors`). These are now represented by arrays of short int values which list the non-zero +1 and -1 entries in a `basicDocVector`. The term vector building routine in the main constructor, and the `generateRandomVector` method, have been refactored accordingly. 

This change gives a major reduction in memory requirements, in one practical example reducing the RAM requirement from 7.3G to 1.1G for the corpus. It also speeds things up
further and should maintain the same memory requirement regardless of
vector length as long as seed length stays constant. Many thanks to Trevor Cohen for these  improvements.

Unfortunately Dominic accidentally left an old copy of `TermVectorsFromLucene.java` in the main directory from which this version was bundled, and only noticed this inclusion after the package was shipped. Please ignore / delete this file.

=== Release 1.0 ===

2007-11-29

The main new feature is the refactoring of the search code to use an abstract `VectorSearcher` class. This implements the main nearest neighbor search, but leaves the scoring function unspecified. This enables developers to quickly test new scoring methods.

Scoring methods implemented so far include cosine similarity and two product similarities, tensor and convolution. (This has led us to realize some features of tensor product similarity which should have been mathematically obvious.)

=== Release 0.8.4 ===

2007-10-30

At the request of one research user, added the `CompareTerms` class and command line interface to enable term-term comparison. Also refactored query vector generation, adding the `CompoundVectorBuilder` class which both `Search` and `CompareTerms` use.

Also improved javadoc.

User reported that everything worked - again good news.

=== Release 0.8.2 ===

2007-10-25

This was the first public release of the software. 
There were about a dozen downloads, and so far so good - no bug reports at all!